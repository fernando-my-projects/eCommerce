{"ast":null,"code":"import { applyMiddleware, compose, combineReducers, createStore } from \"redux\";\nimport { productDetailsReducer, productListReducer } from \"./reducers/productReducers\";\nimport thunk from \"redux-thunk\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : []\n  }\n};\n/* This reducer only returns a list of products,\n\"reducer = (state, action)\"\n*/\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/fernando/Documents/Workspace/eCommerce/frontend/src/store.js"],"names":["applyMiddleware","compose","combineReducers","createStore","productDetailsReducer","productListReducer","thunk","cartReducer","initialState","cart","cartItems","localStorage","getItem","JSON","parse","reducer","productList","productDetails","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,eAAnC,EAAoDC,WAApD,QAAuE,OAAvE;AACA,SACEC,qBADF,EAEEC,kBAFF,QAGO,4BAHP;AAIA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP;AAHA;AADa,CAArB;AAOA;AACA;AACA;;AACA,MAAMG,OAAO,GAAGb,eAAe,CAAC;AAC9Bc,EAAAA,WAAW,EAAEX,kBADiB;AAE9BY,EAAAA,cAAc,EAAEb,qBAFc;AAG9BK,EAAAA,IAAI,EAAEF;AAHwB,CAAD,CAA/B;AAKA,MAAMW,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CnB,OAAvE;AACA,MAAMoB,KAAK,GAAGlB,WAAW,CACvBY,OADuB,EAEvBP,YAFuB,EAGvBU,eAAe,CAAClB,eAAe,CAACM,KAAD,CAAhB,CAHQ,CAAzB;AAMA,eAAee,KAAf","sourcesContent":["import { applyMiddleware, compose, combineReducers, createStore } from \"redux\";\nimport {\n  productDetailsReducer,\n  productListReducer,\n} from \"./reducers/productReducers\";\nimport thunk from \"redux-thunk\";\nimport { cartReducer } from \"./reducers/cartReducers\";\n\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem(\"cartItems\")\n      ? JSON.parse(localStorage.getItem(\"cartItems\"))\n      : [],\n  },\n};\n/* This reducer only returns a list of products,\n\"reducer = (state, action)\"\n*/\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}